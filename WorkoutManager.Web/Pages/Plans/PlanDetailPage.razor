@page "/plans/{id:long}"
@using WorkoutManager.BusinessLogic.DTOs

<PageTitle>@($"Plan: {_plan?.Name ?? "..."}")</PageTitle>

@if (_isLoading)
{
    <MudOverlay Visible="true" DarkBackground="true">
        <MudProgressCircular Indeterminate="true" />
    </MudOverlay>
}
else if (_plan is null)
{
    <MudContainer MaxWidth="MaxWidth.Small" Class="d-flex align-center justify-center" Style="min-height: 300px;">
        <MudText Color="Color.Error">Unable to load plan details. Please try again.</MudText>
    </MudContainer>
}
else
{
    <MudGrid Justify="Justify.SpaceBetween">
        <MudItem>
            @if (_isEditingName)
            {
                <MudTextField @bind-Value="_editedPlanName" Label="Plan Name" Variant="Variant.Outlined" Disabled="@_isSavingName" />
                <MudButton OnClick="SavePlanName" Size="Size.Small" Color="Color.Primary" Disabled="@_isSavingName">
                    @if (_isSavingName)
                    {
                        <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="mr-2" />
                    }
                    Save
                </MudButton>
                <MudButton OnClick="CancelEditName" Size="Size.Small" Disabled="@_isSavingName">Cancel</MudButton>
            }
            else
            {
                <MudText Typo="Typo.h4">
                    @_plan.Name
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" OnClick="StartEditingName" Disabled="@_isSavingName" />
                </MudText>
            }
        </MudItem>
        <MudItem Class="d-flex gap-2 align-center">
            @if (_plan.TrainingDays.Any())
            {
                <MudSwitch T="bool" @bind-Value="_isEditMode" Label="Edit Mode" Color="Color.Primary" Disabled="@_isDeleting" />
            }
            <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="DeletePlan" Disabled="@_isDeleting" />
        </MudItem>
    </MudGrid>

    <MudExpansionPanels MultiExpansion="true" Class="mt-4">
        @foreach (var day in _plan.TrainingDays.OrderBy(d => d.Order))
        {
            <MudExpansionPanel>
                <TitleContent>
                    <div class="d-flex">
                        <div class="d-flex flex-column flex-grow-1">
                            <MudText>@day.Name</MudText>
                            <MudText Class="font-size-small mt-2">Exerices count: @(day.Exercises?.Count() ?? 0)</MudText>
                        </div>
                        <div class="d-flex gap-2 align-self-center mr-4">
                            @if (day.Exercises.Any())
                            {
                                <MudHidden Breakpoint="Breakpoint.MdAndUp">
                                    <MudIconButton Variant="Variant.Filled" Color="Color.Primary" Icon="@Icons.Material.Filled.PlayArrow" Class="ml-2" OnClick="() => StartWorkout(day.Id)" Disabled="@_isStartingWorkout"></MudIconButton>
                                </MudHidden>
                                <MudHidden Breakpoint="Breakpoint.SmAndDown">
                                    <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.PlayArrow" Class="ml-2" OnClick="() => StartWorkout(day.Id)" Disabled="@_isStartingWorkout">
                                        @if (_isStartingWorkout)
                                        {
                                            <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="mr-2" />
                                        }
                                        Start Workout
                                    </MudButton>
                                </MudHidden>
                            }

                            @if (_isEditMode || day.Exercises.Count() == 0)
                            {
                                <MudHidden Breakpoint="Breakpoint.MdAndUp">
                                    <MudIconButton Class="" Variant=" Variant.Filled" Color="Color.Secondary" Icon="@Icons.Material.Filled.Add" OnClick="@(() => AddExercise(day.Id))" Disabled="@_isAddingExercise"></MudIconButton>
                                </MudHidden>
                                <MudHidden Breakpoint="Breakpoint.SmAndDown">
                                    <MudButton Class="" Variant=" Variant.Filled" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Add" OnClick="@(() => AddExercise(day.Id))" Disabled="@_isAddingExercise">
                                        @if (_isAddingExercise)
                                        {
                                            <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="mr-2" />
                                        }
                                        Add Exercise
                                    </MudButton>
                                </MudHidden>

                            }
                        </div>
                    </div>
                </TitleContent>
                <ChildContent>
                    <MudList T="PlanDayExerciseDto">
                        @foreach (var exercise in day.Exercises.OrderBy(e => e.Order))
                        {
                            <div class="mt-2">
                                <MudListItem T="PlanDayExerciseDto">
                                    @exercise.Name
                                    @if (_isEditMode)
                                    {
                                        <MudIconButton Class="float-right" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" OnClick="@(async () => await DeleteExercise(day.Id, exercise.PlanDayExerciseId))" Disabled="@(_isDeletingExercise && _deletingExerciseId == exercise.PlanDayExerciseId)" />
                                    }
                                </MudListItem>
                            </div>
                        }
                    </MudList>
                </ChildContent>

            </MudExpansionPanel>
        }
    </MudExpansionPanels>
}

<style>
    .mud-panel-expanded .mud-expand-panel-header {
        background-color: #FAFAFA;
    }

    .float-right {
        float: right;
    }
</style>