name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Run Unit and Integration Tests
      run: |
        dotnet test WorkoutManager.Api.Tests --no-build --configuration Release --collect:"XPlat Code Coverage" --logger "trx;LogFileName=api-tests.trx"
        dotnet test WorkoutManager.BusinessLogic.Tests --no-build --configuration Release --collect:"XPlat Code Coverage" --logger "trx;LogFileName=businesslogic-tests.trx"
        dotnet test WorkoutManager.Data.Tests --no-build --configuration Release --collect:"XPlat Code Coverage" --logger "trx;LogFileName=data-tests.trx"
    
    - name: Install Playwright Browsers
      run: |
        cd WorkoutManager.E2E.Tests
        pwsh bin/Release/net9.0/playwright.ps1 install chromium --with-deps
    
    - name: Run E2E Tests
      run: dotnet test WorkoutManager.E2E.Tests --no-build --configuration Release --logger "trx;LogFileName=e2e-tests.trx"
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: '**/TestResults/*.trx'
    
    - name: Generate Coverage Report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:"**/coverage.cobertura.xml" -targetdir:"CoverageReport" -reporttypes:"Html;Cobertura"
    
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: CoverageReport/
    
    - name: Code Coverage Summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: '**/coverage.cobertura.xml'
        badge: true
        format: markdown
        output: both
    
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md



