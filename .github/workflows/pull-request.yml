name: Unit and Integration Tests

on:
  pull_request:
    branches: master
    types: [opened, synchronize, reopened]

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "9.0.x"

      - name: Add dotnet-format problem matcher
        uses: xt0rted/dotnet-format-problem-matcher@v1

      - name: Restore dotnet tools
        uses: xt0rted/dotnet-tool-restore@v1

      - name: Run dotnet format
        uses: xt0rted/dotnet-format@v1.2.0

  integration-tests:
    name: Unit and Integration Tests
    runs-on: ubuntu-latest
    needs: run-linters
    environment: TST
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: WorkoutManager.Api Secrets Variables Substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: "**/appsettings.json"
        env:
          SupabaseSettings.Secret: ${{ secrets.SUPABASESETTINGS_SECRET_API }}
          SupabaseSettings.Url: ${{ secrets.SUPABASESETTINGS_URL }}
          JwtBearerSettings.IssuerSigningKey: ${{ secrets.JWTBEARERSETTINGS_ISSUERSIGNINGKEY }}

      - name: WorkoutManager.Api.Tests Secrets Variables Substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: "**/appsettings.Testing.json"
        env:
          SupabaseSettings.Secret: ${{ secrets.SUPABASESETTINGS_SECRET }}
          SupabaseSettings.TestUserId: ${{ secrets.SUPABASESETTINGS_TESTUSERID }}
          SupabaseSettings.Url: ${{ secrets.SUPABASESETTINGS_URL }}
          JwtBearerSettings.Key: ${{ secrets.JWTBEARERSETTINGS_KEY }}
          ConnectionStrings.DefaultConnection: ${{ secrets.CONNECTIONSTRINGS_DEFAULTCONNECTION }}

      - name: Run Unit and Integration Tests
        run: |
          dotnet test WorkoutManager.Api.Tests --no-build --configuration Release --collect:"XPlat Code Coverage" --logger "trx;LogFileName=api-tests.trx"
          dotnet test WorkoutManager.BusinessLogic.Tests --no-build --configuration Release --collect:"XPlat Code Coverage" --logger "trx;LogFileName=businesslogic-tests.trx"
          dotnet test WorkoutManager.Data.Tests --no-build --configuration Release --collect:"XPlat Code Coverage" --logger "trx;LogFileName=data-tests.trx"

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: "**/TestResults/*.trx"

      - name: Generate Coverage Report
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:"**/coverage.cobertura.xml" -targetdir:"CoverageReport" -reporttypes:"Html;Cobertura;MarkdownSummaryGithub"

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: CoverageReport/

      - name: Code Coverage Summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: "**/coverage.cobertura.xml"
          badge: true
          format: markdown
          output: both

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
